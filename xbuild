#!/usr/bin/php -q 
<?php
class xcodeBuild  {

    public $workspace;
    
    public $scheme;

    public $appMacro;

    public $output;

    public $channel;

    public $certificate;

    public $version;

    public $infoPath;

    public $xcodeproj;

    // 原始bundleID
    private $originalBundleID;

    // 原始渠道
    private $originalChannelName;

    // 原始渠道
    private $originalApiServer;

    // project 是个xml 文件
    private $isXML;

    // 原始 appname
    private $originalAppName;

    function __construct() {

        global $argv;

        if (!is_file($argv[1])) {
            exit("配置文件出错!\n");
        }

        $options = file_get_contents($argv[1]);
        $options = json_decode($options, true);

        if (!is_array($options)) {

            die("json配置文件解析失败");
        }

        $this->workspace = $options['workspace'];
        $this->scheme = $options['scheme'];
        $this->appMacro = $options['AppMacro'];
        $this->output = './output/';
        $this->channel = $options['channel'];
        $this->certificate = $options['certificate'];
        $this->version = intval($argv[2]);
        $this->infoPath = $options['infoPath'];
        $this->xcodeproj = $options['xcodeproj'];
    }

    public function exec($value) {
        echo "==========>".$value."===>\n";
        passthru($value, $reset);
        if ($reset == 1) {
            // 替换回去
            $this->exec('git checkout .');
            die("编译失败.\n");
        }
        return $reset;
    }

    // 更新pod
    public function updateCocoapods() {
        
        $shell = "pod install --verbose";
        $this->exec($shell);
        return $this;
    }

    public function clean() {

        // $shell = "xcodebuild -workspace {$this->workspace} -scheme {$this->scheme} clean;";
        // $this->exec($shell);
        return $this;
    }

    public function getOriginalInfo() {
        // 获取原始BundleID
        $shell = "cat {$this->xcodeproj}/project.pbxproj | grep -m1 'PRODUCT_BUNDLE_IDENTIFIER' | awk -F ' = ' '{print $2}' | awk -F ';' '{print $1}'";
        exec($shell, $shellReset);
        $this->originalBundleID = $shellReset[0];
        if (empty($this->originalBundleID)) {

            // 可能project.pbxproj变成了 XML 文件
            $file = file_get_contents("{$this->xcodeproj}/project.pbxproj");
            preg_match('/PRODUCT_BUNDLE_IDENTIFIER<\/key>(.*?)<string>(.*?)<\/string>/s', $file, $shellReset);
            $this->originalBundleID = $shellReset[2];
            if (empty($this->originalBundleID)) {
                die("BundleID 获取失败");
            }
            $this->isXML = true;
        }
        unset($shellReset);

        // 获取原始渠道 ID
        $shell = "cat {$this->appMacro} | grep -m1 'kchannelId'| awk -F '\"' '{print $2}'";
        exec($shell, $shellReset);
        
        $this->originalChannelName = $shellReset[0];
        if (empty($this->originalChannelName)) {
            die("原始渠道获取失败");
        }
        unset($shellReset);

        $shell = "cat {$this->appMacro} | grep -m1 'kAPI_USER_SERVER'| awk -F '\"' '{print $2}'";
        exec($shell, $shellReset);
        $this->originalApiServer = $shellReset[0];

        if (empty($this->originalApiServer)) {
            die("原始ApiServer获取失败");
        }

        unset($shellReset);


        return $this;
    }

    public function bulid() {

        // 当前版本号
        $shell = "/usr/libexec/PlistBuddy -c \"print CFBundleShortVersionString\" {$this->infoPath};";
        $this->exec($shell);

        // 获取原始资源
        $this->getOriginalInfo();

        // 删除文件夹
        if (!empty($this->output) && is_readable($this->output)) {
            $this->exec('rm -fr '.$this->output);
        }

        foreach ($this->channel as $channel) {
            
            // 每次打包，重新创建exportOptions.plist
            file_put_contents('./exportOptions.plist', '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict><key>method</key><string>enterprise</string><key>teamID</key><string>P5AV3F77ZY</string></dict></plist>');

            $codesign = $this->certificate[$channel['channelType']]['codesign'];
            $certificate = $this->certificate[$channel['channelType']]['profile'];

            if ($channel['channelType'] == 'AppStore') {

                $shell = 'sed -i "" "s/#define IS_FORMAL.*/#define IS_FORMAL 1/g" '.$this->appMacro;
                $this->exec($shell);
                $this->exec('/usr/libexec/PlistBuddy -c "Set :method app-store" ./exportOptions.plist');

            } else {

                $shell = 'sed -i "" "s/#define IS_FORMAL.*/#define IS_FORMAL 0/g" '.$this->appMacro;
                $this->exec($shell);
                $this->exec('/usr/libexec/PlistBuddy -c "Set :method enterprise" ./exportOptions.plist');
            }

            // 设置exportOptions
            $shell = "/usr/libexec/PlistBuddy -c 'Add :provisioningProfiles:".$this->certificate[$channel['channelType']]['buildID']." string ".$this->certificate[$channel['channelType']]['ProvisioningProfile']."' ./exportOptions.plist";
            $this->exec($shell);
           
            $this->replaceData($this->version, $this->certificate[$channel['channelType']]['buildID'], $channel['channnelName'], $channel['apiServer'], $channel['appName']);
            
            $buildID = $this->certificate[$channel['channelType']]['buildID'];
            $team = $this->certificate[$channel['channelType']]['TEAM'];

            $output = $this->output."/{$this->version}/{$channel['channnelName']}";

            // 替换 CODE_SIGN_IDENTITY
            $shell = 'sed -i "" "s/CODE_SIGN_IDENTITY .*/CODE_SIGN_IDENTITY = \"'.$this->certificate[$channel['channelType']]['profile'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);
            
            // // 替换 CODE_SIGN_IDENTITY
            $shell = 'sed -i "" "s/\"CODE_SIGN_IDENTITY\[sdk=iphoneos\*\]\".*/\"CODE_SIGN_IDENTITY\[sdk=iphoneos\*\]\" = \"'.$this->certificate[$channel['channelType']]['profile'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);

            // // 替换 CODE_SIGN_IDENTITY
            $shell = 'sed -i "" "s/PROVISIONING_PROFILE .*/PROVISIONING_PROFILE = \"'.$this->certificate[$channel['channelType']]['codesign'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);

            // // 替换 ProvisioningProfile
            $shell = 'sed -i "" "s/PROVISIONING_PROFILE_SPECIFIER .*/PROVISIONING_PROFILE_SPECIFIER = \"'.$this->certificate[$channel['channelType']]['ProvisioningProfile'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);

            // // 替换 buildID
            $shell = 'sed -i "" "s/PRODUCT_BUNDLE_IDENTIFIER .*/PRODUCT_BUNDLE_IDENTIFIER = \"'.$this->certificate[$channel['channelType']]['buildID'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);

            // // 替换 TeamID
            $shell = 'sed -i "" "s/DEVELOPMENT_TEAM .*/DEVELOPMENT_TEAM = \"'.$this->certificate[$channel['channelType']]['TEAM'].'\";/g" '.$this->xcodeproj."/project.pbxproj";
            $this->exec($shell);

	    // update cocoapods
            $this->updateCocoapods();

            #$shell = "xcodebuild -workspace {$this->workspace} -scheme {$this->scheme}  archive -archivePath {$output}.xcarchive   -configuration release; ";

            #$this->exec($shell);
            
            // 设置exportOptions
            // $this->exec('/usr/libexec/PlistBuddy -c "Set :teamID '.$team.'" ./exportOptions.plist');

            $shell = "fastlane gym --workspace {$this->workspace} --scheme {$this->scheme}  --archive_path {$output}.xcarchive --output_directory {$output} --output_name ".$channel['channnelName'].".ipa --codesigning_identity '".addslashes($this->certificate[$channel['channelType']]['profile'])."' --export_team_id ".$team." --export_options ./exportOptions.plist";
            $this->exec($shell);
            

            // 测试包
            // $this->exec("mv $output/$this->scheme.ipa $output/".$channel['channnelName'].".ipa");
            $this->exec("ipa info $output/".$channel['channnelName'].".ipa");

            // 保存dsym
            // $this->exec('mv '.$output.'.xcarchive/dSYMs/* '.$this->output."/{$this->version}/{$channel['channnelName']}/");
            // $this->exec('mv '.$output.'.xcarchive/Info.plist '.$this->output."/{$this->version}/{$channel['channnelName']}/");
            // $this->exec('rm -fr '.$output.".xcarchive");

            $this->exec('git checkout .');
        }
        
        return $this;
    }

    // 替换资源
    public function replaceData($version, $bundle_id, $channnelName, $apiServer, $appName = '') {

        $apiServer = str_replace('/', '\\\\/', $apiServer);
       
        // 更改CFBundleVersion
        $shell = '/usr/libexec/PlistBuddy -c "Set :CFBundleVersion '.$version.'" '.$this->infoPath;
        $this->exec($shell);

        // 替换渠道
        $shell = 'sed -i "" "s/kchannelId.*/kchannelId @\"'.$channnelName.'\"/g" '.$this->appMacro;
        $this->exec($shell);
        

        // 替换服务器地址
        $shell = 'sed -i "" "s/kAPI_USER_SERVER.*/kAPI_USER_SERVER @\"'.$apiServer.'\"/g" '.$this->appMacro;
        $this->exec($shell);

        // 替换名字
        if (!empty($appName)) {

            $shell = '/usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName '.$appName.'" '.$this->infoPath;
            $this->exec($shell);
        }

        // $shell = '/usr/libexec/PlistBuddy -c "Set :CFBundleExecutable '.$channnelName.'" '.$this->infoPath;
        // $this->exec($shell);
        
    }
}

$bulid = new xcodeBuild();
$bulid->clean()->bulid();

